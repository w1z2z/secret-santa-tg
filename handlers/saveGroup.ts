import {Context} from "telegraf";

import {getState, updateState} from "../services";
import {generateRandomCode} from "../utils";
import {Participants, Santa} from "../models";
import {IBotState} from "../interfaces";

const santaInfo = (newSantaName: string, participants: string[], selectedPrice: string, secretCode: number): string => {
  return `
*–¢–∞–π–Ω—ã–π –°–∞–Ω—Ç–∞ üéÖ*

–ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã:* ${newSantaName}* üéÑ

–£—á–∞—Å—Ç–Ω–∏–∫–∏:* ${participants.join(', ')}* üë•

–¶–µ–Ω–∞ –ø–æ–¥–∞—Ä–∫–∞:* ${selectedPrice === "0" ? '–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π' : '–¥–æ ' + selectedPrice + ' —Ä—É–±.'}* üí∞

–ü–µ—Ä–µ—à–ª–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–∞—à–∏–º –¥—Ä—É–∑—å—è–º, —á—Ç–æ–±—ã –æ–Ω–∏ –º–æ–≥–ª–∏ –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ! üéÅ

–í—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –≥—Ä—É–ø–ø–µ –≤–≤–µ–¥—è –∫–æ–¥ - *${secretCode}*‚ÄºÔ∏è

–ï—Å–ª–∏ –≤—ã —Å–æ–∑–¥–∞—Ç–µ–ª—å –≥—Ä—É–ø–ø—ã –∏ —Ç–∞–∫ –∂–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ —É—á–∞—Å—Ç–∏–µ, —Ç–æ –≤–∞–º —Ç–æ–∂–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—èüòâ

\n
–°—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–∑–µ–π: \n[t.me/secret_grandfather_frost_bot](https://t.me/secret_grandfather_frost_bot) üì©
  `;
}

export const saveGroup = async (ctx: any): Promise<void> => {
  if (getState().currentStep === 'saveGroup') {
    const selectedPrice = ctx.match[0];
    const secretCode: number = generateRandomCode();
    const state: IBotState = getState();

    try {
      const savedSanta = await Santa.create({
        name: getState().newSantaName,
        giftPrice: selectedPrice,
        code: secretCode
      });

      savedSanta.participants = await Promise.all(getState().participants.map(async (participant: string) => {
        const newParticipant= await Participants.create({name: participant, santa: savedSanta._id});
        return newParticipant._id;
      }));
      await savedSanta.save();

      ctx.reply(santaInfo(state.newSantaName, state.participants, selectedPrice, secretCode), {parse_mode: "Markdown"});

      // const imageUrl: string = 'http://qrcoder.ru/code/?t.me%2Fsecret_grandfather_frost_bot&10&0';

      // await ctx.replyWithPhoto(imageUrl, {
      //   caption: '–¢–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è QR-–∫–æ–¥–æ–º –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É',
      // });


      updateState({
        currentStep: 'newSanta',
        newSantaName: '',
        participantsCount: 0,
        participants: [],
      })
    } catch (e) {
      console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥—Ä—É–ø–ø—ã:', e);
      ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –î–µ–¥–∞-–ú–æ—Ä–æ–∑–∞');
    }
  }
}
